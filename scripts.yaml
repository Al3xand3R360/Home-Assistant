'1549758477586':
  alias: "Hue gaming scene"
  sequence:
  - service: hue.hue_activate_scene
    data:
      group_name: "Woonkamer"
      scene_name: "Colorfull"
'1549758920504':
  alias: "Hue watch TV scene"
  sequence:
  - service: hue.hue_activate_scene
    data:
      group_name: "Woonkamer"
      scene_name: "TV kijken"
'1549758951085':
  alias: "Hue full light scene"
  sequence:
  - service: hue.hue_activate_scene
    data:
      group_name: "Woonkamer"
      scene_name: "Veel licht"

dimmer:
  sequence:
    - service: light.turn_on
      data_template:
        entity_id: '{{ light_id }}'
        brightness: >-
          {% set domain, name = light_id.split('.') %}
          {% set current = states[domain][name].attributes.brightness | int %}
          {% set step = states('input_number.light_step') | int %}
          {% set action = swipe_action %}
          {% if action == 'swipe_up' %}
            {% set next = current + step | int %}
          {% elif action == 'swipe_down' %}
            {% set next = current - step | int %}
          {% endif %}
          {% if next > states('input_number.light_maximum') | int %}
            {% set next = states('input_number.light_maximum') | int %}
          {% elif next < states('input_number.light_minimum') | int %}
            {% set next = states('input_number.light_minimum') | int %}
          {% endif %}

          {{ next }}

sonos_say:
  alias: "Sonos TTS script"
  sequence:
   - service: sonos.snapshot
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: sonos.unjoin
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.volume_set
     data_template:
       entity_id: "{{ sonos_entity }}"
       volume_level: "{{ volume }}"
   - service: tts.google_translate_say
     data_template:
       entity_id: "{{ sonos_entity }}"
       message: "{{ message }}"
   - delay: "{{ delay }}"
   - service: sonos.restore
     data_template:
       entity_id: "{{ sonos_entity }}"


read_weatherforecast:
  alias: "Gesproken weerbericht"
  sequence:
    - service: script.sonos_say
      data_template:
        sonos_entity: media_player.speakers
        volume: 0.2
        delay: 8
        #   - service: tts.google_translate_say
        #data_template:
        #entity_id: media_player.speakers
        message: >
          {% if now().strftime("%H")|int < 12 %}
          Goedemorgen het is {{now().strftime("%A")}}.
          {% elif now().strftime("%H")|int < 18 %}
          Goedemiddag.
          {% else %}
          Goedenavond.
          {% endif %}
          Het is momenteel {{states.sensor.br_symbol_2.state}} en {{states.sensor.br_temperature_2.state|round}} graden buiten.

turn_on_light:
  sequence:
  - service: homeassistant.toggle
    data_template:
      entity_id: light.hue_lightstrip_plus_1
  - service: homeassistant.turn_off
    data_template:
      entity_id: input_boolean.visitor_ring

turn_off_downstair_lights:
  sequence:
  - service: light.turn_off
    data_template:
      entity_id: light.woonkamer
  - service: light.turn_off
    data_template:
      entity_id: light.eetkamer
  - service: light.turn_off
    data_template:
      entity_id: light.keuken

turn_off_indoor_lights:
  sequence:
  - service: light.turn_off
    data_template:
      entity_id: light.hal
  - service: light.turn_off
    data_template:
      entity_id: light.woonkamer
  - service: light.turn_off
    data_template:
      entity_id: light.eetkamer
  - service: light.turn_off
    data_template:
      entity_id: light.keuken
  - service: light.turn_off
    data_template:
      entity_id: light.kamer_rens
  - service: light.turn_off
    data_template:
      entity_id: light.kamer_maxime

goodnight:
  sequence:
    #Turn off lights
    - service: light.turn_off
      data_template:
        entity_id: light.woonkamer
    - service: light.turn_off
      data_template:
        entity_id: light.eetkamer
    - service: light.turn_off
      data_template:
        entity_id: light.keuken
    - service: light.turn_off
      data_template:
        entity_id: light.terras
    # Condition
    - condition: and
      conditions:
        - condition: time
          after: '22:45:00'
          before: '06:00:00'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.iphone_x_alexander_2
              state: 'home'
            - condition: state
              entity_id: device_tracker.iphone
              state: 'home'
    # Lock frontdoor
    - service: lock.lock
      data:
        entity_id: lock.poly_control_danalock_v3_btze_locked
    # Wish you goodnight
    - service: script.sonos_say
      data:
        sonos_entity: media_player.speakers
        volume: 0.2
        message: 'Weltrusten'
    # Alarm arm for night
    - service: alarm_control_panel.alarm_arm_night
      data:
        entity_id: alarm_control_panel.home_alarm
        code: !secret alarm_code
    # Turn off stairs light after 1 minute
    - delay: '00:01:00'
    - service: light.turn_off
      data_template:
        entity_id: light.hal

goodmorning:
  sequence:
    # Turn on television for kids 
    - service: media_player.turn_on
      data:
        entity_id: media_player.mybraviatv
    # Send notification with weather forecast
    - service: notify.mobile_app_iphone_x_alexander
      data:
        title: Weerbericht van {{now().strftime("%A")}}
        message: >
          {% if now().strftime("%H")|int < 12 %}
          Goedemorgen.
          {% elif now().strftime("%H")|int < 18 %}
          Goedemiddag.
          {% else %}
          Goedenavond.
          {% endif %}
          Het is momenteel {{states.sensor.br_symbol_2.state}} en {{states.sensor.br_temperature_2.state|round}} graden buiten.
    # Wait for television and change the source to NPO 3 HD
    - delay:
        seconds: 30
    - service: media_player.select_source
      data:
        entity_id: media_player.mybraviatv
        source: 'NPO 3 HD' 
    # Read weather forecast
    - service: script.read_weatherforecast
    - condition: sun
      before: sunrise
      before_offset: '+00:30:00' # Everything after this condition will only be executed up until 1 hour after sunset
    # Turn on lights
    - service: light.turn_on
      data:
        entity_id: light.hal
    - service: hue.hue_activate_scene
      data:
        group_name: 'Woonkamer'
        scene_name: 'TV kijken'
    - service: light.turn_on
      data:
        entity_id: light.keuken
